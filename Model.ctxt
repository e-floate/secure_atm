#BlueJ class context
comment0.target=Model
comment1.params=b
comment1.target=Model(Bank)
comment1.text=\r\n\ Model\ constructor\r\n
comment10.params=
comment10.target=void\ processClear()
comment10.text=\r\n\ Clear\ button,\ clear\ the\ display\r\n
comment11.params=
comment11.target=void\ processEnter()
comment11.text=\r\n\ Enter\ button.\ Execute\ different\ logic\ based\ on\ the\r\n\ current\ state.\r\n\ \r\n\ \ ACCOUNT_NO\:\ Store\ the\ user\ input\ and\ save\ it\ to\ accNumber.\ Set\ state\ to\ PASSWORD\r\n\ and\ change\ the\ display.\ \r\n\ \r\n\ \ PASSWORD\:\ Store\ the\ user\ input\ and\ save\ it\ to\ accPasswd.\ Clear\ the\ display,\r\n\ continue\ with\ bank.login()\ method.\ If\ successful,\ set\ state\ to\ LOGGED_IN.\ \r\n\ \r\n\ \ PASSWD_CHANGE\:\ Store\ the\ user\ input\ and\ save\ it\ to\ accPasswd.\ Clear\ the\ display,\r\n\ and\ perform\ the\ passwdLengthCheck()\ method\ passing\ accPasswd\ as\ a\ parameter,\r\n\ If\ the\ new\ password\ passes\ the\ check,\ change\ the\ state\ to\ PASSWD_CHANGE_CONFIRM.\ \r\n\ \r\n\ \ PASSWD_CHANGE_CONFIRM\:\ Checks\ the\ user\ input\ against\ the\ password\ entered\ in\ the\r\n\ PASSWD_CHANGE\ state,\ if\ they\ match,\ continue\ with\ the\ bank.changePassword()\ method.\ \r\n\ \r\n\ \ LOGGED_IN\:\ If\ the\ enter\ button\ is\ pressed\ in\ this\ state,\r\n\ do\ nothing\r\n
comment12.params=
comment12.target=void\ processWithdraw()
comment12.text=\r\n\ Withdraw\ button,\ checks\ if\ the\ user\ is\ logged\ in\r\n\ and\ that\ the\ amount\ to\ withdraw\ is\ not\ higher\ than\ the\ current\r\n\ balance.\ If\ those\ conditions\ are\ met\:\ execute\ the\ bank.withdraw()\ method.\r\n
comment13.params=
comment13.target=void\ processDeposit()
comment13.text=\r\n\ Deposit\ button,\ checks\ if\ the\ user\ is\ logged\ in,\r\n\ if\ so,\ process\ the\ bank.deposit()\ method.\r\n
comment14.params=
comment14.target=void\ processBalance()
comment14.text=\r\n\ Balance\ button,\ check\ if\ the\ user\ is\ logged\ in,\r\n\ if\ so,\ execute\ the\ bank.getBalance()\ method.\r\n
comment15.params=
comment15.target=void\ processPass()
comment15.text=\r\n\ Password\ Change\ -\ Check\ if\ logged\ in,\ if\ so,\ enter\ the\ password\ change\ state\r\n
comment16.params=
comment16.target=void\ processFinish()
comment16.text=\r\n\ Finish\ button,\ checks\ if\ the\ user\ is\ logged\ in,\ if\ so,\r\n\ log\ the\ user\ out.\r\n
comment17.params=action
comment17.target=void\ processUnknownKey(java.lang.String)
comment17.text=\r\n\ Unknown\ key\ inputs\ intialises\ and\ prints\ "Invalid\ command"\r\n
comment18.params=
comment18.target=void\ display()
comment18.text=\r\n\ How\ the\ model\ communicates\ with\ the\ view,\ executes\ the\ view's\r\n\ update()\ method.\r\n
comment2.params=message
comment2.target=void\ initialise(java.lang.String)
comment2.text=\r\n\ The\ initialise\ method\ is\ used\ for\ resetting\ the\ program\r\n\ after\ an\ error,\ or\ whenever\ the\ ATM\ needs\ to\ return\ to\ its\r\n\ ACCOUNT_NO\ state\r\n
comment3.params=
comment3.target=int\ getAccNum()
comment3.text=\r\n\ Public\ getter\ for\ account\ number\r\n
comment4.params=newAccNumber
comment4.target=void\ setAccNum(int)
comment4.text=\r\n\ Public\ setter\ for\ account\ number\r\n
comment5.params=newAccPw
comment5.target=void\ setAccPw(int)
comment5.text=\r\n\ Public\ setter\ for\ account\ password\r\n
comment6.params=
comment6.target=int\ getAccPass()
comment6.text=\r\n\ Public\ getter\ for\ account\ password\r\n
comment7.params=newState
comment7.target=void\ setState(java.lang.String)
comment7.text=\ Method\ to\ change\ state\ -\ mainly\ so\ we\ print\ a\ debugging\ message\ whenever\ \r\n\ the\ state\ changes\r\n
comment8.params=pw
comment8.target=boolean\ passwdLengthCheck(int)
comment8.text=\r\n\ Method\ to\ check\ that\ the\ length\ of\ an\ int\ (in\ this\ case\ the\ new\ password),\r\n\ returns\ true\ if\ between\ 4-8\ digits\r\n
comment9.params=label
comment9.target=void\ processNumber(java.lang.String)
comment9.text=\r\n\ Process\ a\ number\ key\r\n
numComments=19
